@model OctagonPlatform.Models.FormsViewModels.TerminalVaultCashVM
@{
    if (ViewBag.Error != null)
    {
        <p class="alert alert-danger">
            <strong>Error: @ViewBag.Error</strong>
        </p>
    }
}

@if (Model.VaultCash == null)
{       //pendiente validar en el contralador que el usuario no pueda add un vaultcash mas a la terminal.
    if (Model.IsAddVaultCash)
    {
        <p>
            @Ajax.ActionLink("Add", "Create", "VaultCash", new { id = Model.Id },
                           new AjaxOptions
                           {
                               UpdateTargetId = "AddVaultCash",
                               LoadingElementId = "loading3",
                               InsertionMode = InsertionMode.Replace,
                               HttpMethod = "Get",
                               OnFailure = "OnError"
                           },
                           htmlAttributes: new
                           {
                               @class = "btn link",
                               data_toggle = "modal",
                               data_target = "#AddVaultCash"
                           })
        </p>
    }
}

<table id="vaultcash" class="table table-striped table-hover table-bordered">
    <thead class="thead-blue">
        <tr>
            <th>Bank Acc</th>
            <th>Bank Name</th>
            <th>Effective Date</th>
            <th>Stop Date</th>
        </tr>
    </thead>
    @if (Model.VaultCash != null)
    {
        <tbody>
            <tr>
                <td>@Model.VaultCash.BankAccount.NickName</td>
                <td>@Model.VaultCash.BankAccount.BankName</td>
                <td>@Model.VaultCash.StartDate.ToShortDateString()</td>
                <td>@Model.VaultCash.StopDate.ToShortDateString()</td>
                <td>
                    <i class="glyphicon glyphicon-edit"></i>
                    @{
                        if (Model.IsEditVaultCash)
                        {

                            <div>
                                @Ajax.ActionLink("Edit", "Edit", "VaultCash",
                                                                 new { id = Model.VaultCash.Id },
                           new AjaxOptions
                           {
                               UpdateTargetId = "AddVaultCash",
                               LoadingElementId = "loading3",
                               InsertionMode = InsertionMode.Replace,
                               HttpMethod = "Get"
                           },
                           htmlAttributes: new
                           {
                               @class = "btn link",
                               data_toggle = "modal",
                               data_target = "#AddVaultCash"
                           })
                            </div>
                        }
                    }
                </td>
                <td>
                    <i class="glyphicon glyphicon-trash"></i>
                    @{
                        if (Model.IsDeleteVaulCash)
                        {
                            <button type="button" class="btn link"
                                    data-toggle="modal" data-id="@Model.VaultCash.Id" data-target="#DeleteVaultCash">
                                Delete
                            </button>
                        }
                    }
                </td>
            </tr>
        </tbody>
                        }
</table>

<div id="DeleteVaultCash" class="modal fade" role="dialog">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Vault Cash</h4>
                <div class="modal-body">
                    <p>Are you sure you want to delete VaultCash? </p>
                </div>
                <div class="modal-footer">
                    @using (Html.BeginForm("Delete", "VaultCash", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <input type="hidden" id="Id" name="Id" value="@Model.Id" />
                        <div class="form-group">
                            <input type="submit" value="Delete" class="btn btn-danger" id="confirm" />
                            <button type="reset" data-dismiss="modal" class="btn btn-default">Cancel</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function OnError(content) {
//agrrgada par aque mostrara los errores en modal. obligado crear la ventana modal para que se mostrara en la ventana modal de la pagina detail de Terminals.        
        var stringModal = "<div class='modal fade' id='AddVaultCash' role='dialog'  style='display: contents;'>"+
            "<div class='modal-dialog modal-sm'>"+
                "<div class='modal-content'>"+
                   "<div class='modal-header'>"+
                        "<button type='button' class='close' data-dismiss='modal'>&times;</button>"+
                       " <h4 class='modal-title'>ERROR</h4>"+
                    "</div>"+
            " <div class='modal-body'>" +
            "<p>" + content + "</p>" +
                   " </div>"+
                   " <div class='modal-footer'>"+
                     "<button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>"+
                   " </div>"+
               " </div>"+
           " </div>"+
            "</div>";
        $('#AddVaultCash').addClass("modal").html(stringModal);
        
    }
</script>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}