@model OctagonPlatform.Models.FormsViewModels.TerminalAlertIngnoredViewModel

<table class="table table-striped table-hover ">

    <tr class="info">

        <th data-toggle="collapse" data-target="#demo">
            Inactive Period: @Model.IgnoreHoursInactive
            <div id="demo" class="collapse">
                <table>
                    <tbody>
                        @{
                            foreach (var item in Model.WorkingHours)
                            {
                                <tr>
                                    <td>
                                        @item.Day
                                        @item.StartTime
                                        - @item.EndTime
                                    </td>   
                                    <td>
                                        <button type="button" class="WorkingHoursEdit btn btn-info btn-microsoft" data-toggle="modal" data-id="@item.Id" data-target="#myModalWorkingHours">Edit</button>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td></td>
                                <td>
                                    <button type="button" class="btn btn-info btn-microsoft" data-toggle="modal" data-target="#ModalAddWorkingHours">Add</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </th>
        <th></th>
    </tr>

    <tr class="info">

        <th>Low Cash 1:</th>
        <th>@Model.LowCach1</th>
    </tr>
    <tr class="info">

        <th>Low Cash 2:</th>
        <th>@Model.LowCash2</th>
    </tr>
    <tr class="info">

        <th>Low Cash 3:</th>
        <th>@Model.LowCash3</th>
    </tr>
    <tbody></tbody>
</table>
Ignored Alerts <br />
@Html.CheckBoxFor(m => m.IgnoreBillDispenserNeedAttention, new { @disabled = "disabled" }) Bill dispenser needs attention or out of service<br />
@Html.CheckBoxFor(m => m.IgnoreCardReaderNeedAttention, new { @disabled = "disabled" }) Card reader needs attention or out of service<br />
@Html.CheckBoxFor(m => m.IgnoreCassetteNotes, new { @disabled = "disabled" }) Cassette notes are out<br />
@Html.CheckBoxFor(m => m.IgnoreChestDoorOpen, new { @disabled = "disabled" }) Chest door is open<br />
@Html.CheckBoxFor(m => m.IgnoreCommNeedAttention, new { @disabled = "disabled" }) Comm system needs attention or out of service<br />
@Html.CheckBoxFor(m => m.IgnoreJournalNeedAttention, new { @disabled = "disabled" }) Journal printer needs attention or out of service<br />
@Html.CheckBoxFor(m => m.IgnoreJournalPaper, new { @disabled = "disabled" }) Journal printer paper is low/out<br />
@Html.CheckBoxFor(m => m.IgnoreJournalRibbon, new { @disabled = "disabled" }) Journal printer ribbon is low/out<br />
@Html.CheckBoxFor(m => m.IgnoreReceiptNeedAttention, new { @disabled = "disabled" }) Receipt printer need attention or out of service<br />
@Html.CheckBoxFor(m => m.IgnoreReceiptPaper, new { @disabled = "disabled" }) Receipt printer paper is low/out<br />
@Html.CheckBoxFor(m => m.IgnoreReceiptRibbon, new { @disabled = "disabled" }) Receipt printer ribbon is low/out<br />
@Html.CheckBoxFor(m => m.IgnoreTopDoorOpen, new { @disabled = "disabled" }) Top door is Open<br />

<button type="button" class="btn btn-info btn-microsoft" data-toggle="modal" data-target="#myModal">Edit configuration</button>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
            </div>

            <h3 class="alert-info">Edit Config Alert</h3>

            @using (Html.BeginForm("SetConfigNotification", "Terminals"))
            {
                @Model
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.TerminalId)
                <p class="alert alert-danger">
                    All fields are <strong>required.</strong>
                    @ViewBag.Error
                    @Html.ValidationSummary(false, "Please fix the fallowing errors!!!", new { @class = "text-danger" })
                </p>
                <div class="form-group">
                    @Html.LabelFor(m => m.IgnoreHoursInactive)
                    @Html.TextBoxFor(m => m.IgnoreHoursInactive, new { @class = "form-control", autofocus = "autofocus", placeholder = "1 Jan 2000", @type = "date" })
                    @Html.ValidationMessageFor(m => m.IgnoreHoursInactive)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LowCach1)
                    @Html.TextBoxFor(m => m.LowCach1, new { @class = "form-control", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.LowCach1)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LowCash2)
                    @Html.TextBoxFor(m => m.LowCash2, new { @class = "form-control", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.LowCash2)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LowCash3)
                    @Html.TextBoxFor(m => m.LowCash3, new { @class = "form-control", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.LowCash3)
                </div>
                <div class="form-group">
                    Ignored Alerts <br />
                    @Html.CheckBoxFor(m => m.IgnoreBillDispenserNeedAttention) Bill dispenser needs attention or out of service<br />
                    @Html.CheckBoxFor(m => m.IgnoreCardReaderNeedAttention) Card reader needs attention or out of service<br />
                    @Html.CheckBoxFor(m => m.IgnoreCassetteNotes) Cassette notes are out<br />
                    @Html.CheckBoxFor(m => m.IgnoreChestDoorOpen) Chest door is open<br />
                    @Html.CheckBoxFor(m => m.IgnoreCommNeedAttention) Comm system needs attention or out of service<br />
                    @Html.CheckBoxFor(m => m.IgnoreJournalNeedAttention) Journal printer needs attention or out of service<br />
                    @Html.CheckBoxFor(m => m.IgnoreJournalPaper) Journal printer paper is low/out<br />
                    @Html.CheckBoxFor(m => m.IgnoreJournalRibbon) Journal printer ribbon is low/out<br />
                    @Html.CheckBoxFor(m => m.IgnoreReceiptNeedAttention) Receipt printer need attention or out of service<br />
                    @Html.CheckBoxFor(m => m.IgnoreReceiptPaper) Receipt printer paper is low/out<br />
                    @Html.CheckBoxFor(m => m.IgnoreReceiptRibbon) Receipt printer ribbon is low/out<br />
                    @Html.CheckBoxFor(m => m.IgnoreTopDoorOpen) Top door is Open<br />
                </div>

                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        <button type="reset" class="btn btn-default">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="myModalWorkingHours" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
                <h3 class="alert-info">Edit Config Alert</h3>
            </div>

            @using (Html.BeginForm("SetWorkingHours", "Terminals"))
            {
            @Model
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.TerminalId)
            @Html.Hidden("WorkingHoursEdit")
            <input type="hidden" id="WorkingHoursEdit" name="WorkingHoursEdit" value="Norway">
            @Html.EnumDropDownListFor(x => x.Days, "Select My Type", new { @class = "form-control" })

            @Html.DropDownList("StartTime", new List<SelectListItem>
                {
                    new SelectListItem{ Text="01:00", Value = "1" },
                    new SelectListItem{ Text="02:00", Value = "2" },
                    new SelectListItem{ Text="03:00", Value = "3" },
                    new SelectListItem{ Text="04:00", Value = "4" },
                    new SelectListItem{ Text="05:00", Value = "5" },
                    new SelectListItem{ Text="06:00", Value = "6" },
                    new SelectListItem{ Text="07:00", Value = "7" },
                    new SelectListItem{ Text="08:00", Value = "8" },
                    new SelectListItem{ Text="09:00", Value = "9" },
                    new SelectListItem{ Text="10:00", Value = "10" },
                    new SelectListItem{ Text="11:00", Value = "11" },
                    new SelectListItem{ Text="12:00", Value = "12" },
                    new SelectListItem{ Text="13:00", Value = "13" },
                    new SelectListItem{ Text="14:00", Value = "14" },
                    new SelectListItem{ Text="15:00", Value = "15" },
                    new SelectListItem{ Text="16:00", Value = "16" },
                    new SelectListItem{ Text="17:00", Value = "17" },
                    new SelectListItem{ Text="18:00", Value = "18" },
                    new SelectListItem{ Text="19:00", Value = "19" },
                    new SelectListItem{ Text="20:00", Value = "20" },
                    new SelectListItem{ Text="21:00", Value = "21" },
                    new SelectListItem{ Text="22:00", Value = "22" },
                    new SelectListItem{ Text="23:00", Value = "23" },
                    new SelectListItem{ Text="24:00", Value = "24" },
                 })

            @Html.DropDownList("EndTime", new List<SelectListItem>
                {
                    new SelectListItem{ Text="01:00", Value = "1" },
                    new SelectListItem{ Text="02:00", Value = "2" },
                    new SelectListItem{ Text="03:00", Value = "3" },
                    new SelectListItem{ Text="04:00", Value = "4" },
                    new SelectListItem{ Text="05:00", Value = "5" },
                    new SelectListItem{ Text="06:00", Value = "6" },
                    new SelectListItem{ Text="07:00", Value = "7" },
                    new SelectListItem{ Text="08:00", Value = "8" },
                    new SelectListItem{ Text="09:00", Value = "9" },
                    new SelectListItem{ Text="10:00", Value = "10" },
                    new SelectListItem{ Text="11:00", Value = "11" },
                    new SelectListItem{ Text="12:00", Value = "12" },
                    new SelectListItem{ Text="13:00", Value = "13" },
                    new SelectListItem{ Text="14:00", Value = "14" },
                    new SelectListItem{ Text="15:00", Value = "15" },
                    new SelectListItem{ Text="16:00", Value = "16" },
                    new SelectListItem{ Text="17:00", Value = "17" },
                    new SelectListItem{ Text="18:00", Value = "18" },
                    new SelectListItem{ Text="19:00", Value = "19" },
                    new SelectListItem{ Text="20:00", Value = "20" },
                    new SelectListItem{ Text="21:00", Value = "21" },
                    new SelectListItem{ Text="22:00", Value = "22" },
                    new SelectListItem{ Text="23:00", Value = "23" },
                    new SelectListItem{ Text="24:00", Value = "24" },
                 })

            <div class="form-group">
                <div class="col-lg-10 col-lg-offset-2">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
            }
        </div>
    </div>
</div>

<div id="ModalAddWorkingHours" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
                <h3 class="alert-info">Edit Config Alert</h3>
            </div>

            @using (Html.BeginForm("AddWorkingHours", "Terminals"))
            {
                @Model
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.TerminalId)

                @Html.EnumDropDownListFor(x => x.Days, "Select My Type", new { @class = "form-control" })

                @Html.DropDownList("StartTime", new List<SelectListItem>
                {
                    new SelectListItem{ Text="01:00", Value = "1" },
                    new SelectListItem{ Text="02:00", Value = "2" },
                    new SelectListItem{ Text="03:00", Value = "3" },
                    new SelectListItem{ Text="04:00", Value = "4" },
                    new SelectListItem{ Text="05:00", Value = "5" },
                    new SelectListItem{ Text="06:00", Value = "6" },
                    new SelectListItem{ Text="07:00", Value = "7" },
                    new SelectListItem{ Text="08:00", Value = "8" },
                    new SelectListItem{ Text="09:00", Value = "9" },
                    new SelectListItem{ Text="10:00", Value = "10" },
                    new SelectListItem{ Text="11:00", Value = "11" },
                    new SelectListItem{ Text="12:00", Value = "12" },
                    new SelectListItem{ Text="13:00", Value = "13" },
                    new SelectListItem{ Text="14:00", Value = "14" },
                    new SelectListItem{ Text="15:00", Value = "15" },
                    new SelectListItem{ Text="16:00", Value = "16" },
                    new SelectListItem{ Text="17:00", Value = "17" },
                    new SelectListItem{ Text="18:00", Value = "18" },
                    new SelectListItem{ Text="19:00", Value = "19" },
                    new SelectListItem{ Text="20:00", Value = "20" },
                    new SelectListItem{ Text="21:00", Value = "21" },
                    new SelectListItem{ Text="22:00", Value = "22" },
                    new SelectListItem{ Text="23:00", Value = "23" },
                    new SelectListItem{ Text="24:00", Value = "24" },
                 })

                @Html.DropDownList("EndTime", new List<SelectListItem>
                {
                    new SelectListItem{ Text="01:00", Value = "1" },
                    new SelectListItem{ Text="02:00", Value = "2" },
                    new SelectListItem{ Text="03:00", Value = "3" },
                    new SelectListItem{ Text="04:00", Value = "4" },
                    new SelectListItem{ Text="05:00", Value = "5" },
                    new SelectListItem{ Text="06:00", Value = "6" },
                    new SelectListItem{ Text="07:00", Value = "7" },
                    new SelectListItem{ Text="08:00", Value = "8" },
                    new SelectListItem{ Text="09:00", Value = "9" },
                    new SelectListItem{ Text="10:00", Value = "10" },
                    new SelectListItem{ Text="11:00", Value = "11" },
                    new SelectListItem{ Text="12:00", Value = "12" },
                    new SelectListItem{ Text="13:00", Value = "13" },
                    new SelectListItem{ Text="14:00", Value = "14" },
                    new SelectListItem{ Text="15:00", Value = "15" },
                    new SelectListItem{ Text="16:00", Value = "16" },
                    new SelectListItem{ Text="17:00", Value = "17" },
                    new SelectListItem{ Text="18:00", Value = "18" },
                    new SelectListItem{ Text="19:00", Value = "19" },
                    new SelectListItem{ Text="20:00", Value = "20" },
                    new SelectListItem{ Text="21:00", Value = "21" },
                    new SelectListItem{ Text="22:00", Value = "22" },
                    new SelectListItem{ Text="23:00", Value = "23" },
                    new SelectListItem{ Text="24:00", Value = "24" },
                 })

                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>
    $(document).on("click", ".WorkingHoursEdit", function () {
        var myBookId = $(this).data('id');
        $("#myModalWorkingHours #WorkingHoursEdit").val(myBookId);
    });
</script>
