@model OctagonPlatform.Models.FormsViewModels.TerminalFormViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdminSB.cshtml";
}

<h3 class="alert-info">Create Terminal</h3>

@using (Html.BeginForm("Create", "Terminals")) 
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <p class="alert alert-danger">
            All fields are <strong>required.</strong>
            @ViewBag.Error
            @Html.ValidationSummary(false, "Please fix the fallowing errors!!!", new { @class = "text-danger" })
        </p>
    
        <div class="form-group">
            @Html.LabelFor(m => m.PartnerId)
            @Html.DropDownListFor(m => m.PartnerId, new SelectList(Model.Partners, "Id", "BusinessName"), "", new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.PartnerId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Status)
            @Html.EnumDropDownListFor(m => m.Status, "", new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.Status)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address1)
            @Html.TextBoxFor(m => m.Address1, new {@class = "form-control", placeholder = "124 SW 105 Ave" })
            @Html.ValidationMessageFor(m => m.Address1)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address2)
            @Html.TextBoxFor(m => m.Address2, new {@class = "form-control", autofocus = "autofocus", placeholder = "Apto 203" })
            @Html.ValidationMessageFor(m => m.Address2)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Zip)
            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control", autofocus = "autofocus", placeholder = "33181"})
            @Html.ValidationMessageFor(m => m.Zip)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LocationTypeId)
            @Html.DropDownListFor(m => m.LocationTypeId, new SelectList(Model.LocationTypes, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LocationTypeId)
        </div>
        <div class="form-group">
            <div id="Countries">
                <label for="Countries">Country</label>
                <select required id="CountryId" name="CountryId" class="form-control">
                    <option value="231">United States</option>
                    @foreach (var item in Model.Countries)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.CountryId)

            </div>
            <div><img id="loading" style="display:none" src="~/Content/loading_icon.gif" alt="" /></div>
        </div>
        <div class="form-group">
            <div id="States">
                <label for="States">State</label>
                <select required id="StatesId" name="StateId" class="form-control">
                    <option value="3930">Florida</option>
                    @foreach (var item in Model.States)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.StateId)

            </div>
            <div><img id="loading" style="display:none" src="~/Content/loading_icon.gif" alt="" /></div>
        </div>
        <div class="form-group">
            <div id="Cities">
                <label for="Cities">City</label>
                <select id="CitiesId" name="CityId" class="form-control">
                    <option value="43769">Miami</option>
                    @foreach (var item in Model.Cities)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.CityId)
            </div>
            <div><img id="loading" style="display:none" src="~/Content/loading_icon.gif" alt="" /></div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone)
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", autofocus = "autofocus", placeholder = "(786) 555 5555"})
            @Html.ValidationMessageFor(m => m.Phone)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MakeId)
            @Html.DropDownListFor(m => m.MakeId, new SelectList(Model.Makes, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MakeId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ModelId)
            @Html.DropDownListFor(m => m.ModelId, new SelectList(Model.Models, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ModelId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CommunicationType)
            @Html.EnumDropDownListFor(m => m.CommunicationType, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CommunicationType)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EmvReady)
            @Html.TextBoxFor(m => m.EmvReady, new { @class = "form-control", autofocus = "autofocus" })
            @Html.ValidationMessageFor(m => m.EmvReady)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MachineSerialNumber)
            @Html.TextBoxFor(m => m.MachineSerialNumber, new { @class = "form-control", autofocus = "autofocus", placeholder = "1117060030" })
            @Html.ValidationMessageFor(m => m.MachineSerialNumber)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.VeppSerialNumber)
            @Html.TextBoxFor(m => m.VeppSerialNumber, new { @class = "form-control", autofocus = "autofocus", placeholder = "1117060030" })
            @Html.ValidationMessageFor(m => m.VeppSerialNumber)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SoftwareVersion)
            @Html.TextBoxFor(m => m.SoftwareVersion, new { @class = "form-control", autofocus = "autofocus", placeholder = "V301.1.1"})
            @Html.ValidationMessageFor(m => m.SoftwareVersion)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FimwareVersion)
            @Html.TextBoxFor(m => m.FimwareVersion, new { @class = "form-control", autofocus = "autofocus", placeholder = "V301.1.1" })
            @Html.ValidationMessageFor(m => m.FimwareVersion)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.BankAccountId)
            @Html.DropDownListFor(m => m.BankAccountId, new SelectList(Model.BankAccounts, "Id", "NickName"), "", new {@class = "form-control"})
            @Html.ValidationMessageFor(m => m.BankAccountId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SurchargeAmountFee)
            @Html.TextBoxFor(m => m.SurchargeAmountFee, new { @class = "form-control", autofocus = "autofocus", placeholder = "V301.1.1" })
            @Html.ValidationMessageFor(m => m.SurchargeAmountFee)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SurchargePercentageFee)
            @Html.TextBoxFor(m => m.SurchargePercentageFee, new { @class = "form-control", autofocus = "autofocus", placeholder = "V301.1.1" })
            @Html.ValidationMessageFor(m => m.SurchargePercentageFee)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.SurchargeType)
            @Html.EnumDropDownListFor(m => m.SurchargeType, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SurchargeType)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.WhoInitiates)
            @Html.EnumDropDownListFor(m => m.WhoInitiates, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.WhoInitiates)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CryptoPercentChargeAmount)
            @Html.TextBoxFor(m => m.CryptoPercentChargeAmount, new { @class = "form-control", autofocus = "autofocus", placeholder = "4.99"})
            @Html.ValidationMessageFor(m => m.CryptoPercentChargeAmount)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.InstalledDate)
            @Html.TextBoxFor(m => m.InstalledDate, "{0:d MMM yyyy}", new { @class = "form-control", autofocus = "autofocus", placeholder = "1 Jan 2000", @type = "date"})
            @Html.ValidationMessageFor(m => m.InstalledDate)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LoadedBy)
            @Html.TextBoxFor(m => m.LoadedBy, new { @class = "form-control", autofocus = "autofocus", placeholder = "Leo" })
            @Html.ValidationMessageFor(m => m.LoadedBy)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Balance)
            @Html.TextBoxFor(m => m.Balance, new { @class = "form-control", autofocus = "autofocus", placeholder = "1500" })
            @Html.ValidationMessageFor(m => m.Balance)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.MinAmmountCash)
            @Html.TextBoxFor(m => m.MinAmmountCash, new { @class = "form-control", autofocus = "autofocus", placeholder = "300" })
            @Html.ValidationMessageFor(m => m.MinAmmountCash)
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-10 col-lg-offset-2">
            <button type="reset" onclick="history.back();" class="btn btn-default">Cancel</button>
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/xpopulate")
}
