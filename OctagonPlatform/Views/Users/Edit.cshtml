@model OctagonPlatform.Models.FormsViewModels.UserEditFormViewModel

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_LayoutAdminSB.cshtml";
}

@using (Html.BeginForm("Edit", "Users"))
{
    <p class="alert alert-danger">
        All fields are <strong>required.</strong>
    </p>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    if (!string.IsNullOrEmpty(Model.Error))
    {
        <div class="alert alert-danger">
            @Model.Error.ToString()
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", autofocus = "autofocus" })
        @Html.ValidationMessageFor(m => m.UserName)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Status)
        @Html.EnumDropDownListFor(m => m.Status, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Status)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", autofocus = "autofocus" })
        @Html.ValidationMessageFor(m => m.LastName)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", autofocus = "autofocus" })
        @Html.ValidationMessageFor(m => m.Email)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phone)
        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", autofocus = "autofocus" })
        @Html.ValidationMessageFor(m => m.Phone)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PartnerId)
        @Html.DropDownListFor(m => m.PartnerId, new SelectList(Model.Partners, "Id", "BusinessName"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.PartnerId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.PasswordFor(m => m.Password, new { @class = "form-control", autofocus = "autofocus" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword)
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", autofocus = "autofocus" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IsLocked)
        @Html.CheckBoxFor(m => m.IsLocked, new { @class = "form-control", autofocus = "autofocus" })
        @Html.ValidationMessageFor(m => m.IsLocked)
    </div>

    <button type="submit" class="btn btn-primary">Save</button>

    <table class="table table-striped table-hover ">
        <thead>
            <tr>
                <th>SetOf</th>
                <th>All</th>
                <th>Create</th>
                <th>View</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SetOfPermissions)
            {
                var valueCreate = @item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "Create").Id;
                var valueView = @item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "View").Id;
                var valueEdit = @item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "Edit").Id;
                var valueDelete = @item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "Delete").Id;

                var temp = Model.Permissions.FirstOrDefault().Id;
                <tr>
                    <td>@Html.Label(item.Name)</td>
                    <td><input type="checkbox" name="Permissions1" value=" " /></td>
                    <td><input type="checkbox" checked="@(valueCreate == temp)):checked" name="Permissions1" value="@valueCreate" /></td>
                    <td><input type="checkbox" name="Permissions1" value="@valueView" /></td>
                    <td><input type="checkbox" name="Permissions1" value="@valueEdit" /></td>
                    <td><input type="checkbox" name="Permissions1" value="@valueDelete" /></td>

                    @*<td>@Html.CheckBox(item.Permissions.FirstOrDefault(c=> c.SetOfPermissionId == item.Id && c.Type=="Create").Name,true)</td>
                        <td>@Html.CheckBox(item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "View").Name)</td>
                        <td>@Html.CheckBox(item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "Edit").Name)</td>
                        <td>@Html.CheckBox(item.Permissions.FirstOrDefault(c => c.SetOfPermissionId == item.Id && c.Type == "Delete").Name)</td>*@
                </tr>
            }

    </table>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




