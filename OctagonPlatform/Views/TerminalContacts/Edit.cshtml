@model OctagonPlatform.Models.FormsViewModels.TerminalContactFormViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdminSB.cshtml";
}

<h3 class="alert-info">Edit Contact</h3>

@using (Html.BeginForm("Edit", "TerminalContacts"))
{
    <p class="alert alert-danger">
        All fields are <strong>required.</strong>
        @ViewBag.Error
        @Html.ValidationSummary(false, "Please fix the fallowing errors!!!", new { @class = "text-danger" })
    </p>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.TerminalId)
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", autofocus = "autofocus", placeholder = "Jhon" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", autofocus = "autofocus", placeholder = "Smith" })
        @Html.ValidationMessageFor(m => m.LastName)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ContactTypeId)
        @Html.DropDownListFor(m => m.ContactTypeId, new SelectList(Model.ContactTypes, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ContactTypeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address1)
        @Html.TextBoxFor(m => m.Address1, new { @class = "form-control", placeholder = "124 SW 105 Ave" })
        @Html.ValidationMessageFor(m => m.Address1)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address2)
        @Html.TextBoxFor(m => m.Address2, new { @class = "form-control", autofocus = "autofocus", placeholder = "Apto 203" })
        @Html.ValidationMessageFor(m => m.Address2)
    </div>
    <div class="form-group">
        <div id="Countries">
            <label for="Countries">Country</label>
            <select required id="CountryId" name="CountryId" class="form-control">
                <option value="@Model.CountryId">@Model.Country.Name</option>
                @foreach (var item in Model.Countries)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
            @Html.ValidationMessageFor(m => m.CountryId)

        </div>
        <div><img id="loading" style="display:none" src="~/Content/loading_icon.gif" alt="" /></div>
    </div>
    <div class="form-group">
        <div id="States">
            <label for="States">State</label>
            <select required id="StatesId" name="StateId" class="form-control">
                <option value="@Model.StateId">@Model.State.Name</option>
                @foreach (var item in Model.States)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
            @Html.ValidationMessageFor(m => m.StateId)

        </div>
        <div><img id="loading" style="display:none" src="~/Content/loading_icon.gif" alt="" /></div>
    </div>
    <div class="form-group">
        <div id="Cities">
            <label for="Cities">City</label>
            @if (Model.City != null)
            {
                <select id="CitiesId" name="CityId" class="form-control">
                    <option value="@Model.CityId">@Model.City.Name</option>
                    @foreach (var item in Model.Cities)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.CityId)
            }
            else
            {

                <select id="CitiesId" name="CityId" class="form-control"></select>
                @Html.ValidationMessageFor(m => m.CityId)
            }

        </div>
        <div><img id="loading" style="display:none" src="~/Content/loading_icon.gif" alt="" /></div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", autofocus = "autofocus", placeholder = "test@email.com" })
        @Html.ValidationMessageFor(m => m.Email)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phone)
        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", autofocus = "autofocus", placeholder = "(786) 555 5555" })
        @Html.ValidationMessageFor(m => m.Phone)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Zip)
        @Html.TextBoxFor(m => m.Zip, new { @class = "form-control", autofocus = "autofocus", placeholder = "33181" })
        @Html.ValidationMessageFor(m => m.Zip)
    </div>
    <div class="form-group">
        <div class="col-lg-10 col-lg-offset-2">
            <button type="reset" onclick="history.back();" class="btn btn-default">Cancel</button>
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/xpopulate")
}





