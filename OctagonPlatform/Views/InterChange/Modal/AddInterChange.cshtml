@model OctagonPlatform.Models.FormsViewModels.InterChangeFormViewModel

@*ADD*@
<div id="AddInterchange" class="modal fade" role="dialog" style="display:contents;">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
                <h3 class="alert-info">Add interchange</h3>
            </div>

            @using (Html.BeginForm("Save", "InterChange", FormMethod.Post))
            { 
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m =>m.TerminalId)
                @Html.HiddenFor(m => m.Id) //si viene es que ese una edicion

                <div class="form-group">
                    <p class="alert-warning">
                        All fields are <strong>required.</strong>
                        @ViewBag.Error
                        @Html.ValidationSummary(false, "", new { @class = "text-warning" })
                    </p>

                    <div class="form-group">
                        @Html.LabelFor(m => m.BankAccountId)
                            @Html.DropDownListFor(m => m.BankAccountId, new SelectList(Model.BankAccounts, "Id", "NickName"), "", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.BankAccountId)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.SplitAmount)
                            @Html.TextBoxFor(m => m.SplitAmount, new { @class = "form-control", autofocus = "autofocus" })
                            @Html.ValidationMessageFor(m => m.SplitAmount)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.StartDate)
                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", autofocus = "autofocus", @Value = Model.StartDate.ToShortDateString() })
                            @Html.ValidationMessageFor(m => m.StartDate)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.StopDate)
                            @Html.TextBoxFor(m => m.StopDate, new { @class = "form-control", autofocus = "autofocus", @Value = Model.StopDate.ToShortDateString() })
                            @Html.ValidationMessageFor(m => m.StopDate)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CalculationMethod)
                            @Html.EnumDropDownListFor(m => m.CalculationMethod, "", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CalculationMethod)
                    </div>
                    <div class="form-group">
                        <div class="col-lg-10 col-lg-offset-2">
                            <button type="reset" onclick="history.back();" class="btn btn-default">Cancel</button>
                            <button type="submit" id="saveButton" class="btn btn-primary">Save</button>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>