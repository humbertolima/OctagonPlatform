@model OctagonPlatform.Models.FormsViewModels.ScheduleViewModel

@{
    ViewBag.Title = "Create";
}


@*@using (Ajax.BeginForm("Create", "Schedule", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ScheduleForm" }))*@
@using (Html.BeginForm("Create", "Schedule"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Repeats, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Repeats, htmlAttributes: new { @class = "form-control", @id = "Repeats" })
            @Html.HiddenFor(model => model.RepeatsSelected, new { id = "RepeatsSelected" })
            @Html.ValidationMessageFor(model => model.Repeats, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="repeatsSelected">
        <div id="time" style="display:none">
            <div class="form-group">
                @Html.Label("Time(CST)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Time, Model.DropDownTime, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="daily" style="display:none">
            <div class="form-group">
                @Html.Label("Repeat On", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span>
                        Every @Html.DropDownListFor(model => model.RepeatOn, Model.DropDownRepeatOn, new { @class = "form-control", @style = "width:20%;display:inline;" }) Day(s)
                    </span>

                    @Html.ValidationMessageFor(model => model.RepeatOn, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div id="monthly" style="display:none">
            <div class="form-group">
                @Html.Label("Repeat On", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span>
                        Day @Html.DropDownListFor(model => model.RepeatOnDay, Model.DropDownRepeatOnDay, new { @class = "form-control", @style = "width:20%;display:inline;" })
                    </span>
                    <span>
                        Every @Html.DropDownListFor(model => model.RepeatOnMonth, Model.DropDownRepeatOnMonth, new { @class = "form-control", @style = "width:20%;display:inline;" })  Month(s)
                    </span>
                    @Html.ValidationMessageFor(model => model.RepeatOnDay, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.RepeatOnMonth, "", new { @class = "text-danger" })

                </div>
            </div>

        </div>
        <div id="weekly" style="display:none">
            <div class="form-group">
                @Html.Label("Repeat On", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span>
                        Every   @Html.DropDownListFor(model => model.RepeatOnWeeks, Model.DropDownRepeatOnWeeks, new { @class = "form-control", @style = "width:20%;display:inline;" }) Week(s)
                    </span>

                    @Html.ValidationMessageFor(model => model.RepeatOnWeeks, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label>@Html.CheckBox("Mon", new { @value = "Mon", @id = "Mon" }) Mon </label>
                    <label>@Html.CheckBox("Tue", new { @value = "Tue", @id = "Tue" }) Tue </label>
                    <label> @Html.CheckBox("Wed", new { @value = "Wed", @id = "Wed" }) Wed </label>
                    <label>@Html.CheckBox("Thur", new { @value = "Thur", @id = "Thur" }) Thur </label>
                    <label>@Html.CheckBox("Fri", new { @value = "Fri", @id = "Fri" }) Fri </label>
                    <label> @Html.CheckBox("Sat", new { @value = "Sat", @id = "Sat" }) Sat </label>
                    <label> @Html.CheckBox("Sun", new { @value = "Sun", @id = "Sun" }) Sun </label>
                    @Html.HiddenFor(model => model.RepeatOnDaysWeeks, new { id = "RepeatOnDaysWeeks" })
                </div>
            </div>
        </div>
        <div id="monthlyRelative" style="display:none">
            <div class="form-group">
                @Html.Label("Repeat On", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span>
                        The @Html.DropDownListFor(model => model.RepeatOnFirst, Model.DropDownRepeatOnFirst, new { @class = "form-control", @style = "width:20%;display:inline;" })
                        @Html.DropDownListFor(model => model.RepeatOnDay2, Model.DropDownRepeatOnDay2, new { @class = "form-control", @style = "width:20%;display:inline;" })

                    </span>
                    <span>
                        Every   @Html.DropDownListFor(model => model.RepeatOnMonth2, Model.DropDownRepeatOnMonth2, new { @class = "form-control", @style = "width:20%;display:inline;" }) Month(s)
                    </span>
                    @Html.ValidationMessageFor(model => model.RepeatOnDay2, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.RepeatOnMonth2, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.RepeatOnFirst, "", new { @class = "text-danger" })



                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @Value = " " } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="display:none;" id="Stop">
        @Html.LabelFor(model => model.StopDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StopDate, new { htmlAttributes = new { @class = "form-control", @Value = "Continue Indefinite" } })
            @Html.ValidationMessageFor(model => model.StopDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.UserId, new { id = "UserId" })
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" id="btn" />
        </div>
    </div>
</div>
   
}

@Scripts.Render("~/Scripts/jquery.validate.min.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
