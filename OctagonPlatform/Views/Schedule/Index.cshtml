@model IEnumerable<OctagonPlatform.Models.Schedule>
@using OctagonPlatform.Models
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>

    @Ajax.ActionLink("Create", // <-- Text to display

                                     "Create", // <-- Action Method Name
                                     new AjaxOptions
                                     {
                                         UpdateTargetId = "ScheduleForm", // <-- DOM element ID to update
                                         InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                                         HttpMethod = "GET", // <-- HTTP method
                                         OnSuccess = "Success"
                                     })

</p>

<table class="table">
    <tr>

        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Repeats)
        </th>
      
        <th>
            Recurrence
        </th>
        <th>
            Time(CST)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
           Stop Date
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>

        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Repeats)
        </td>
       
        <td>
            @if (item.GetType() == typeof(ScheduleDaily))
    {
        <p> Every @(((ScheduleDaily)item).RepeatOn) Day(s)</p>
}
            @if (item.GetType() == typeof(ScheduleWeekly))
    {
        <p> Every @(((ScheduleWeekly)item).RepeatOnWeeks) Week(s)</p>
        <p> @(((ScheduleWeekly)item).RepeatOnDaysWeeks) </p>
}
            @if (item.GetType() == typeof(ScheduleMonthly))
    {
        <p> Day @(((ScheduleMonthly)item).RepeatOnDay) Every @(((ScheduleMonthly)item).RepeatOnMonth) Month(s)</p>
}
            @if (item.GetType() == typeof(ScheduleMonthlyRelative))
    {
        <p> The @(((ScheduleMonthlyRelative)item).RepeatOnFirst) @(((ScheduleMonthlyRelative)item).RepeatOnDay) Every  @(((ScheduleMonthlyRelative)item).RepeatOnMonth) Month(s)</p>
}
        </td>
        <td>
            @if (item.GetType() == typeof(ScheduleDaily))
    {
        <p> @(((ScheduleDaily)item).Time)</p>
}
            @if (item.GetType() == typeof(ScheduleWeekly))
    {
        <p> @(((ScheduleWeekly)item).Time)</p>

}
            @if (item.GetType() == typeof(ScheduleMonthly))
    {
        <p> @(((ScheduleMonthly)item).Time) </p>
}
            @if (item.GetType() == typeof(ScheduleMonthlyRelative))
    {
        <p> @(((ScheduleMonthlyRelative)item).Time) </p>
}
            @if (item.GetType() == typeof(ScheduleOnce))
    {
        <p> @(((ScheduleOnce)item).Time) </p>
}
        </td>
        <td>
            @item.StartDate.ToShortDateString()
        </td>
        <td>
            @if (item.GetType() == typeof(ScheduleDaily))
    {
        <p> @(((ScheduleDaily)item).StopDate)</p>
}
            @if (item.GetType() == typeof(ScheduleWeekly))
    {
        <p> @(((ScheduleWeekly)item).StopDate)</p>

}
            @if (item.GetType() == typeof(ScheduleMonthly))
    {
        <p> @(((ScheduleMonthly)item).StopDate) </p>
}
            @if (item.GetType() == typeof(ScheduleMonthlyRelative))
    {
        <p> @(((ScheduleMonthlyRelative)item).StopDate) </p>
}
        
        </td>
        <td>
          
            @Ajax.ActionLink("Edit", // <-- Text to display

                                 "Edit", // <-- Action Method Name
                                  new { id = item.ID },
                                 new AjaxOptions
                                 {
                                     UpdateTargetId = "ScheduleForm", // <-- DOM element ID to update
                             InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                             HttpMethod = "GET", // <-- HTTP method
                             OnSuccess = "Success"
                                 })|
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
        </td>
    </tr>
    }

</table>
<div id="ScheduleForm" style="position:relative;margin:0 auto;width:50%"></div>
@section Scripts {

    <script>
        function Success() {
            $("#StartDate").datepicker({
                dateFormat: "mm/dd/yy"
            });
            $("#StopDate").datepicker({
                dateFormat: "mm/dd/yy"
            });
            $("#btn").click(function () {
               
                var str = "";
                $("input:checked").each(function () {
                   
                    str += $(this).val() + "_";
                });
                str = str.substr(0, str.length - 1);
                $("#RepeatOnDaysWeeks").val(str);
            });
            $("#Repeats").change(function () {
                var val = $(this).val();
                $("#RepeatsSelected").val(val);
                $("#Repeats").val(val);
                if (val == 1) {
                    $("#time").css("display", "block");
                    $("#daily").css("display", "none");
                    $("#monthly").css("display", "none");
                    $("#weekly").css("display", "none");
                    $("#monthlyRelative").css("display", "none");
                    $("#Stop").css("display", "none");
                } else {
                    if (val == 2) {
                        $("#time").css("display", "block");
                        $("#daily").css("display", "block");
                        $("#monthly").css("display", "none");
                        $("#weekly").css("display", "none");
                        $("#monthlyRelative").css("display", "none");
                        $("#Stop").css("display", "block");
                    } else {
                        if (val == 3) {
                            $("#time").css("display", "block");
                            $("#daily").css("display", "none");
                            $("#monthly").css("display", "none");
                            $("#weekly").css("display", "block");
                            $("#monthlyRelative").css("display", "none");
                            $("#Stop").css("display", "block");
                        } else {
                            if (val == 4) {
                                $("#time").css("display", "block");
                                $("#daily").css("display", "none");
                                $("#monthly").css("display", "block");
                                $("#weekly").css("display", "none");
                                $("#monthlyRelative").css("display", "none");
                                $("#Stop").css("display", "block");
                            } else {
                                if (val == 5) {
                                    $("#time").css("display", "block");
                                    $("#daily").css("display", "none");
                                    $("#monthly").css("display", "none");
                                    $("#weekly").css("display", "none");
                                    $("#monthlyRelative").css("display", "block");
                                    $("#Stop").css("display", "block");
                                }
                            }
                        }
                    }
                }
            });
        }    


    </script>


}