@model OctagonPlatform.Models.FormsViewModels.CashManagementVM
@{
    ViewBag.Title = "Cash Management";


}
<p></p>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Filter Report Cash Management</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="form-horizontal">
                    <div class="col-xs-12 col-sm-4 col-md-4">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.TerminalId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TerminalId, new { htmlAttributes = new { @class = "form-control", @id = "terminal", @placeholder = "< All >" } })
                                @Html.ValidationMessageFor(model => model.TerminalId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Partner, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Partner, new { htmlAttributes = new { @class = "form-control", @id = "partner", @placeholder = "< All >" } })
                                @Html.HiddenFor(model => model.PartnerId, new { id = "partnerid" })
                                @Html.ValidationMessageFor(model => model.Partner, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", @id = "group", @placeholder = "< All >" } })
                                @Html.HiddenFor(model => model.GroupId, new { id = "groupid" })
                                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(b => b.Status, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" style="text-align: right;">
                                <input type="submit" value="Filter" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        }

    </div>
</div>
<div class="panel panel-primary">
    <div class="panel-heading">

        <h3 class="panel-title">List Cash Management</h3>
    </div>
    <div class="panel-body">
        @Html.Partial("_PartialTableMorris")

        <div>
            @Html.ActionLink("Back to List", "Index")

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/autocomplete.js")
    <script>

        var urlautopartner = '@Url.Action("AutoPartner", "ReportsSmart")';
        var urlstate = '@Url.Action("AutoState", "ReportGroup")';
        var urlcity = '@Url.Action("AutoCity", "ReportGroup")';
        var urlzipcode = '@Url.Action("AutoZipCode", "ReportGroup")';
        var urlautoterminal = '@Url.Action("AutoTerminal", "ReportsSmart")';
        var urlautogroup = '@Url.Action("AutoGroup", "ReportsSmart")';

    $(function () {
        $("#tablecash").DataTable();
      
            ChartBar();
            $('#grid').append("<tfoot align='right'><tr><th colspan = 2 style='text-align: right;'>  </th><th > </th><th ></th><th ></th><th ></th><th ></th><th ></th></tr></tfoot>");

            $("#grid").DataTable({
                "scrollX": true,
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // converting to interger to find total
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // computing column Total of the complete result 
                    var monTotal = api
                        .column(2)
                        .data()
                        .reduce(function (a, b) {

                            return intVal(a) + intVal(b);
                        }, 0);
                    var monTotal1 = api
                        .column(5)
                        .data()
                        .reduce(function (a, b) {

                            return intVal(a) + intVal(b);
                        }, 0);
                    var monTotal2 = api
                        .column(6)
                        .data()
                        .reduce(function (a, b) {

                            return intVal(a) + intVal(b);
                        }, 0);
                    var monTotal3 = api
                        .column(7)
                        .data()
                        .reduce(function (a, b) {

                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer by showing the total with the reference of the column index 
                    $(api.column(0).footer()).html('Totals:');
                    $(api.column(2).footer()).html("$" + monTotal);
                    $(api.column(5).footer()).html("$" + monTotal1);
                    $(api.column(6).footer()).html("$" + monTotal2);
                    $(api.column(7).footer()).html("$" + monTotal3);

                }
            });
            $("#grid tr").find('td:eq(2), td:eq(5), td:eq(6), td:eq(7)').each(function (index, val) {
                $(this).html("$" + $(this).html());
            });

        });

    </script>

}


