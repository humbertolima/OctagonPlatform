@model OctagonPlatform.Models.FormsViewModels.TerminalListViewModel
@{
    ViewBag.Title = "Report Terminal List";


}
<p></p>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Filter Report Cash Load</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="form-horizontal">
                    <div class="col-xs-12 col-sm-4 col-md-4">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.TerminalId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TerminalId, new { htmlAttributes = new { @class = "form-control", @id = "terminal", @placeholder = "< All >" } })
                                @Html.ValidationMessageFor(model => model.TerminalId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", @id = "group", @placeholder = "< All >" } })
                                @Html.HiddenFor(model => model.GroupId, new { id = "groupid" })
                                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Partner, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Partner, new { htmlAttributes = new { @class = "form-control", @id = "partner", @placeholder = "< All >" } })
                                @Html.HiddenFor(model => model.PartnerId, new { id = "partnerid" })
                                @Html.ValidationMessageFor(model => model.Partner, "", new { @class = "text-danger" })
                            </div>
                        </div>
                       
                        <div class="form-group">
                            @Html.Label("Account: ", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control", @id = "account", @placeholder = "<All>" } })
                                @Html.HiddenFor(model => model.AccountId, new { @id = "accountid" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(b => b.Status, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("City: ", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "city", @placeholder = "<All>" } })
                                @Html.HiddenFor(model => model.CityId, new { @id = "cityid" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("State: ", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @id = "state", @placeholder = "<All>" } })
                                @Html.HiddenFor(model => model.StateId, new { @id = "stateid" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Zip Code: ", new { @class = "col-sm-2 control-label" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "zipcode", @placeholder = "<All>" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @id = "StartDate", @readonly = "" } })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @id = "EndDate", @readonly = "" } })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConectionType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(b => b.ConectionType, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConectionType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" style="text-align: right;">
                                <input type="submit" value="Filter" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        }

    </div>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">

        <h3 class="panel-title">Terminal List</h3>
    </div>
    <div class="panel-body">
        @Html.Partial("_PartialTable")

        <div>
            @Html.ActionLink("Back to List", "Index")

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/autocomplete.js")
    <script>

      var urlautopartner = '@Url.Action("AutoPartner", "ReportsSmart")';
        var urlstate = '@Url.Action("AutoState", "ReportGroup")';
        var urlcity = '@Url.Action("AutoCity", "ReportGroup")';
        var urlzipcode = '@Url.Action("AutoZipCode", "ReportGroup")';
        var urlautoterminal = '@Url.Action("AutoTerminal", "ReportsSmart")';
        var urlautogroup = '@Url.Action("AutoGroup", "ReportsSmart")';
        var urlautoaccount = '@Url.Action("AutoAccount", "BankAccount")';
        $(function () {
           
           
            $("#EndDate").datepicker({
                dateFormat: "mm/dd/yy"
            });
            $("#StartDate").datepicker({
                dateFormat: "mm/dd/yy"
            });
          
          
            $("#grid tr").find('td:eq(12)').each(function (index, val) {
                $(this).html("$" + $(this).html());
            });
           



        });

    </script>

}


