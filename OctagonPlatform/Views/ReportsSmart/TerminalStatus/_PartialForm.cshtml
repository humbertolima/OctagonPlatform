@model OctagonPlatform.Models.FormsViewModels.TerminalStatusViewModel
<div class="row">
    <div class="form-horizontal">
        <div class="col-xs-12 col-sm-4 col-md-4">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", @id = "group", @placeholder = "< All >" } })
                    @Html.HiddenFor(model => model.GroupId, new { id = "groupid" })
                    @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Partner, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Partner, new { htmlAttributes = new { @class = "form-control", @id = "partner", @placeholder = "< All >" } })
                    @Html.HiddenFor(model => model.PartnerId, new { id = "partnerid" })
                    @Html.ValidationMessageFor(model => model.Partner, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-4 col-md-4">


            <div class="form-group">
                @Html.Label("City: ", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "city", @placeholder = "<All>" } })
                    @Html.HiddenFor(model => model.CityId, new { @id = "cityid" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("State: ", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @id = "state", @placeholder = "<All>" } })
                    @Html.HiddenFor(model => model.StateId, new { @id = "stateid" })
                </div>
            </div>

        </div>
        <div class="col-xs-12 col-sm-4 col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(b => b.Status, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Zip Code: ", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "zipcode", @placeholder = "<All>" } })
                </div>
            </div>


        </div>


    </div>
</div>
@Scripts.Render("~/Scripts/autocomplete.js")