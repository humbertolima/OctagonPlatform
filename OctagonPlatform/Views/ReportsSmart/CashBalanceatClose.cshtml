

@model OctagonPlatform.Models.FormsViewModels.CashBalanceAtCloseVM
@{
    ViewBag.Title = "Cash Balance At Close";


}
<p></p>
<div class="panel panel-primary">
    <div class="panel-heading">
        <a name="ankle"></a>
        <h3 class="panel-title">Filter Report Cash Management</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="form-horizontal">
                    <div class="col-xs-12 col-sm-4 col-md-4">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                      

                        <div class="form-group">
                            @Html.LabelFor(model => model.Partner, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Partner, new { htmlAttributes = new { @class = "form-control", @id = "partner", @placeholder = "< All >" } })
                                @Html.HiddenFor(model => model.PartnerId, new { id = "partnerid" })
                                @Html.ValidationMessageFor(model => model.Partner, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", @id = "group", @placeholder = "< All >" } })
                                @Html.HiddenFor(model => model.GroupId, new { id = "groupid" })
                                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @id = "StartDate", @readonly = "" } })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" style="text-align: right;">
                                <input type="submit" value="Filter" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        }

    </div>
</div>
@if (TempData["List"] != null)
{
  
    <div class="panel panel-primary">
        <div class="panel-heading">

            <h3 class="panel-title">List Cash Management</h3>
        </div>
        <div class="panel-body">
            <div style="display:none" id="idhead">
                @Html.Partial("_PartialHead", null, new ViewDataDictionary { { "Title", "Cash Management" } })

            </div>
            @Html.Partial("_PartialTable", null, new ViewDataDictionary { { "orientation", "Landscape" } })

            <div>
                @Html.ActionLink("Back to List", "Index")

            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning" style="width:50%;position:relative;margin:0 auto;">
        <strong>Warning!</strong> Not Record Available.
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/autocomplete.js")
    <script>

        var urlautopartner = '@Url.Action("AutoPartner", "ReportsSmart")';
        var urlstate = '@Url.Action("AutoState", "ReportGroup")';
        var urlcity = '@Url.Action("AutoCity", "ReportGroup")';
        var urlzipcode = '@Url.Action("AutoZipCode", "ReportGroup")';
        var urlautoterminal = '@Url.Action("AutoTerminal", "ReportsSmart")';
        var urlautogroup = '@Url.Action("AutoGroup", "ReportsSmart")';
        var urlautoaccount ;
    $(function () {
        $("#StartDate").datepicker({
            dateFormat: "mm/dd/yy"
        });
        callankle();
          var tempdataval = '@TempData["List"]';
          if (tempdataval != null && tempdataval != '') {
              callankle2();
              ChartBar();

              var sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;
              $("#grid tbody tr").find('td:eq(2)').each(function (index, val) {

                  sum1 += $(this).html() * 1;
              });
              $("#grid tbody tr").find('td:eq(5)').each(function (index, val) {

                  sum2 += $(this).html() * 1;
              });
              $("#grid tbody tr").find('td:eq(6)').each(function (index, val) {

                  sum3 += $(this).html() * 1;
              });
              $("#grid tbody tr").find('td:eq(7)').each(function (index, val) {

                  sum4 += $(this).html() * 1;
              });
              $('#grid').append("<tr align='right'><th></th><th >  </th><th > $" + sum1 + "</th><th ></th><th ></th><th >$" + sum2 + "</th><th >$" + sum3 + "</th><th >$" + sum4 + "</th></tr>");

              $("#grid tr").find('td:eq(2), td:eq(5), td:eq(6), td:eq(7)').each(function (index, val) {
                  $(this).html("$" + $(this).html());
              });
          }
        });

    </script>

}


