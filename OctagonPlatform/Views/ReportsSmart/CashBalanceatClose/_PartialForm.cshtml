@model OctagonPlatform.Models.FormsViewModels.CashBalanceatCloseViewModel
<div class="row">
    <div class="form-horizontal">
        

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-xs-12 col-sm-4 col-md-4">

            <div class="form-group">
                @Html.LabelFor(model => model.Partner, htmlAttributes: new { @class = "control-label col-md-2 partner" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Partner, new { htmlAttributes = new { @class = "form-control", @id = "partner", @placeholder = "< All >" } })
                    @Html.HiddenFor(model => model.PartnerId, new { id = "partnerid" })
                    @Html.ValidationMessageFor(model => model.Partner, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2 group" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", @id = "group", @placeholder = "< All >" } })
                    @Html.HiddenFor(model => model.GroupId, new { id = "groupid" })
                    @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                </div>
            </div>
            @if ((bool)TempData["sub"] == false)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2 from" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @id = "StartDate", @readonly = "" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

}
else
{
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2 from" })
            <div class="col-md-10">
                <label>@Html.DropDownList("StartDate", (IEnumerable<SelectListItem>)TempData["StartDate"], htmlAttributes: new { @class = "form-control" })Day(s) Previous</label>

                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

}
        </div>



    </div>
</div>
@Scripts.Render("~/Scripts/autocomplete.js")